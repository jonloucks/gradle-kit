buildscript {
    repositories {
        gradlePluginPortal()
        google()
    }
}

plugins {
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '1.2.1'
    id 'jacoco'
}

apply from: "${rootDir}/gradle/java-versions.gradle"

repositories {
    gradlePluginPortal()
    mavenCentral()
}

dependencies {
    implementation libs.okhttp3
    implementation libs.jacoco
    implementation libs.spotbugs

    testImplementation platform(libs.junit.bom)
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation libs.hamcrest
    testImplementation libs.mockito.core
    testImplementation libs.mockito.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.13"
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
        csv.required = true
    }
}

gradlePlugin {
    website = 'https://github.com/jonloucks/gradle-kit'
    vcsUrl = 'https://github.com/jonloucks/gradle-kit'
    plugins {
        javaPlugin {
            id = 'io.github.jonloucks.java-kit'
            implementationClass = 'io.github.jonloucks.gradle.kit.JavaPlugin'
            displayName = 'Gradle Java Kit plugin'
            description = 'Automatic configuration of the Gradle Java plugin'
            tags.set(['java', 'github', 'workflow', 'java-versions'])
        }
        javaLibraryPlugin {
            id = 'io.github.jonloucks.java-library-kit'
            implementationClass = 'io.github.jonloucks.gradle.kit.JavaLibraryPlugin'
            displayName = 'Gradle Java Library Kit plugin'
            description = 'Automatic configuration of the Gradle Java-Library plugin'
            tags.set(['java', 'github', 'workflow', 'java-versions', 'java-library'])
        }
        mavenPublishPlugin {
            id = 'io.github.jonloucks.maven-publish-kit'
            implementationClass = 'io.github.jonloucks.gradle.kit.MavenPublishPlugin'
            displayName = 'Gradle Maven Publish Sonatype plugin'
            description = 'Publishing to https://central.sonatype.com/publishing via new API'
            tags.set(['java', 'github', 'workflow', 'OSSRH', 'GPG', 'signing'])
        }
        signingPlugin {
            id = 'io.github.jonloucks.signing-kit'
            implementationClass = 'io.github.jonloucks.gradle.kit.SigningPlugin'
            displayName = 'Gradle OSSRH GPG Signing plugin'
            description = 'Signing for publishing to https://central.sonatype.com/publishing via new API'
            tags.set(['java', 'github', 'workflow', 'OSSRH', 'GPG', 'signing'])
        }
    }
}